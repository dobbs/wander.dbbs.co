{
  "version": 3,
  "mappings": ";;AAKG;EAAA;;;;;;EAEHA,MAAM,CAACC,OAAO,CAACC,MAAf,GACE;IAAAC,MAAM,cAACC,GAAD,EAAMC,IAAN,IAAN;IACAC,MAAM,cAACF,GAAD,EAAMC,IAAN;MAER;MAAID,GAAG,CAACG,EAAJ,CAAO,UAAP,EAAmB;eAAMC,IAAI,CAACC,UAAL,CAAgBL,GAAhB,EAAqBC,IAArB;MAAN,CAAnB;MAEAD,GAAG,CAACM,MAAJ;MAOAC,WAAU,iBAACC,GAAD;QACR,IAAkBA,WAAlB;UAAA,OAAO;;QACP,QAAOA,GAAG,CAACC,WAAX;UAAA,KACOC,MADP;mBACmBF;UADnB,KAEOG,MAFP;mBAEmB,CAACH;UAFpB,KAGOI,KAHP;mBAGkBL,SAAQC,GAAG,CAAC,CAAD,CAAX;UAHlB,KAIOK,MAJP;mBAImBN,SAAQC,GAAG,CAACM,KAAZ;UAJnB,KAKOC,QALP;mBAKqBP;UALrB;mBAMO;QAAA;MARC;MAUVQ,SAAS,gBAACC,MAAD;QACb;QAAMb,IAAI,CAACc,GAAL,CAAS,QAAT,EAAmBd,IAAI,CAACe,YAAL,CAAkBnB,GAAlB,CAAnB;QACAoB;QAAA;;UACEhB,IAAI,CAACc,GAAL,CAAS,aAAT,EAAwBG,EAAEC,IAAF,CAAO,CAACC,IAAR,CAAa,MAAb,CAAoB,CAACC,IAA7C;UACA,IAAG,CAACC,SAASJ,EAAEC,IAAF,CAAO,CAACC,IAAR,CAAa,MAAb,CAAV,EAAgCC,IAAI,CAACE,OAArC,CAA6CT,MAA7C,KAAwD,CAA3D;YACE,OAAOQ;;QAHX;QAIA,MAAM,IAAIE,KAAJ,2CAA6CV,MAAnC,EAAV;MANC;MAQTW,YAAYZ,OAAO,mBAAP;MAEZa,UAAU,iBAACC,UAAD,EAAaC,KAAb;QACd;QAAMC,MAAMD,KAAK,CAACC;QACZC,OAAOF,KAAK,CAACE;QACbb;QAAAc;QAAA;;UACE,IAAGC,QAAO,UAAV;YACEC,QAAQhC,IAAI,CAACiC,YAAL,aAAuBL,GAAG,CAACM,QAAT,QAAlB;YACR,IAAGR,UAAH;cACE,IAAGC,KAAK,CAACQ,MAAM,CAACC,MAAb,GAAsB,CAAzB;gBACED,SAAS;;kBAACE;kBAAAC;kBAAA;;kCAAAC,CAAC,CAACC,OAAO,CAACC,OAAV,CAAkB,IAAlB,EAAuB,GAAvB;kBAAA;;mBAAD,CAAoDC,IAApD,CAAyD,IAAzD;8BACTb,IAAI,CAAC3B,MAAL,kCAAsC8B,KAA1B,iDAAmEG,MAAnE,2BAAZ;eAFF;8BAIEN,IAAI,CAAC3B,MAAL,kCAAsC8B,KAA1B,WAAZ;;aALJ;4BAOEH,IAAI,CAAC3B,MAAL,kCAAsC8B,KAA1B,WAAZ;;WATJ;YAWEW,MAAMxC,SAAQyB,GAAG,CAACG,GAAD,CAAX;YACNa,MAAMzC,SAAQwB,KAAK,CAACkB,KAAK,CAACd,GAAD,CAAnB;YACN,IAAGL,cAAckB,WAAjB;cACEE,QAAWH,GAAG,CAACI,OAAJ,CAAY,CAAZ,MAAkBH,GAAG,CAACG,OAAJ,CAAY,CAAZ,CAArB,GACN,OADM,GAEAJ,GAAG,CAACI,OAAJ,CAAY,CAAZ,MAAkBH,GAAG,CAACG,OAAJ,CAAY,CAAZ,CAArB,GACH,QADG,GAGH;cACFC,kBAAWpB,GAAG,CAACM,QAAP,eAAoBH,GAApB,mBAAgCY,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAAhC,mBAAsDH,GAAG,CAACG,OAAJ,CAAY,CAAZ,CAAtD;4BACRlB,IAAI,CAAC3B,MAAL,uCAA0C8C,KAA9B,6BAAoDjB,GAApD,8BAAyEe,KAAzE,iBAAoFH,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAApF,WAAZ;aARF;cAUEC,kBAAWpB,GAAG,CAACM,QAAP,eAAoBH,GAApB,eAA4BY,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAA5B;4BACRlB,IAAI,CAAC3B,MAAL,uCAA0C8C,KAA9B,6BAAoDjB,GAApD,gBAA4DY,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAA5D,WAAZ;;;QAzBN;;MAHQ;MA8BVE,WAAU,iBAACtB,KAAD,EAAQuB,MAAR,EAAgBC,IAAhB;QACR,IAAGxB,KAAK,CAACyB,OAAO,CAAChB,MAAd,GAAuB,CAA1B;iBACEc,MAAM,CAACG,IAAP,CAAY1B,KAAZ,EAAmBA,KAAK,CAACyB,OAAO,CAACE,KAAd,EAAnB,EAA0C3B,KAAK,CAACkB,KAAhD,EAAuD,UAAClB,KAAD,EAAQ4B,MAAR;YACpD5B,KAAK,CAAC4B,MAAN,GAAeA;YACfC,CAAC,CAACC,MAAF,CAAS9B,KAAK,CAACkB,KAAf,EAAsBU,MAAtB;mBACAN,SAAQtB,KAAR,EAAeuB,MAAf,EAAuBC,IAAvB;UAHoD,CAAvD;SADF;UAME,OAAOA,KAAKxB,KAAL;;MAPD;MASV+B,UAAU,iBAACC,KAAD,EAAQR,IAAR;eACRS,WAAWT,IAAX,EAAiBQ,KAAjB;MADQ;MAGVE,cAAc,qBAACF,KAAD,EAAQhC,KAAR,EAAewB,IAAf;eACZO,QAAQC,KAAR,EAAe;iBACb3D,IAAI,CAAC8D,SAAL,CAAe,QAAf,EAAyB,UAACZ,MAAD;mBACvBjC,CAAC,CAAC8C,OAAF,YAAcpC,KAAK,CAACqC,IAAV,YAAuB,UAAC7C,IAAD;cAC/BQ,KAAK,CAACyB,OAAN,GAAgBI,CAAC,CAACS,MAAF,CAAS9C,IAAI,CAAC+C,KAAd,EAAqB,UAACrE,IAAD;uBAAUA,IAAI,CAACsE,IAAL,KAAa;cAAvB,CAArB;qBAChBlB,SAAQtB,KAAR,EAAeuB,MAAf,EAAuBC,IAAvB;YAF+B,CAAjC;UADuB,CAAzB;QADa,CAAf;MADY;MAOdiB,QAAQ;QAAA,IAACvB,4EAAM,EAAP;QACZ;QAAMwB,aAAapD,qBAAcA,EAAE,OAAF,CAAU,CAACqD,KAAX,CAAiB1E,GAAjB,CAAZ,OAAF;QACb2D,SAASC,CAAC,CAACC,MAAF,CAAS,EAAT,EAAaZ,KAAb;QACT;;UACE3B,OAAOD,EAAEC,IAAF;UACP,IAAGA,IAAI,CAACqD,QAAL,CAAc,cAAd,CAAH;YACEf,CAAC,CAACC,MAAF,CAASF,MAAT,EAAiBrC,IAAI,CAACsD,GAAL,CAAS,CAAT,CAAW,CAACC,SAAZ,EAAjB;WADF,MAEK,IAAGvD,IAAI,CAACqD,QAAL,CAAc,MAAd,CAAH;YACHf,CAAC,CAACC,MAAF,CAASF,MAAT,EAAiBrC,IAAI,CAACC,IAAL,CAAU,MAAV,CAAiB,CAACA,IAAI,CAAC,CAAD,CAAvC;;QALJ;QAMA,OAAOoC;MATD;MAWRmB,UAAU,iBAACC,OAAD;QACd;QAAM3E,IAAI,CAACc,GAAL,CAAS,SAAT,EAAoB6D,OAApB;QACAC,SAASpB,CAAC,CAACqB,MAAF,CAASF,OAAT,EAAkB,UAAChD,KAAD;iBAAW,CAACxB,SAAQwB,KAAK,CAACkB,KAAK,CAAC,aAAD,CAAnB;QAAZ,CAAlB;QACT;;UACElB,KAAK,CAACkB,KAAK,CAACiC,IAAZ,aAAsBR,QAAM,CAAT;QADrB;QAEAxC;QAAA;;UACEH,KAAK,CAACE,IAAI,CAACkD,KAAX;wBACAtD,QAAQ,IAAR,EAAcE,KAAd;QAFF;;MALQ;MASV/B,GAAG,CAACM,MAAJ,CAAY8E,SAAS/D,aAAV,CAAX;MACAgE,OAAOzB,CAAC,CAACqB,MAAF,CAASrD,SAAS,CAACL,IAAnB,EAAyB,UAACS,GAAD;eAAS,CAACzB,SAAQyB,GAAG,CAAC,aAAD,CAAX;MAAV,CAAzB;MACP+B,QAAQ;MACRgB,UAAU;MACVO,YAAYD,IAAI,CAAC7C;MACjBN;MAAA;;QACEkC,OAAOhE,IAAI,CAACmF,MAAL,CAAYvD,GAAG,CAACM,QAAhB;QACP8C,MAAM,CAAC9E,MAAP,CAAe2B,OAAOZ,wBAAkB+C,IAAhB,SAAV,CAAd;QACArC,QAAQ;UAACE,IAAD,EAACA,IAAD;UAAOD,GAAP,EAAOA,GAAP;UAAYoC,IAAZ,EAAYA,IAAZ;UAAkBnB,OAAOuB,OAAzB;UAAkCjC,QAAQ;QAA1C;QACRV,QAAQ,KAAR,EAAeE,KAAf;QACAgC,SAAS;sBACTE,YAAYF,KAAZ,EAAmBhC,KAAnB,EAA0B,UAACA,KAAD;UACxBA,KAAK,CAACE,IAAI,CAACkD,KAAX;UACApD,KAAK,CAACkB,KAAK,CAACiC,IAAZ,GAAmBnD,KAAK,CAACC,GAAG,CAACkD;UAC7BrD,QAAQ,IAAR,EAAcE,KAAd;UACAgD,OAAO,CAACS,IAAR,CAAazD,KAAb;UACAuD,aAAa;UACb,KAAwBA,SAAxB;mBAAAR,QAAQC,OAAR;;QANwB,CAA1B;MANF;;IAzGI;EADN",
  "names": [
    "window",
    "plugins",
    "rollup",
    "emit",
    "div",
    "item",
    "bind",
    "on",
    "wiki",
    "textEditor",
    "append",
    "asValue",
    "obj",
    "constructor",
    "Number",
    "String",
    "Array",
    "Object",
    "value",
    "Function",
    "attach",
    "search",
    "log",
    "getDataNodes",
    "ref",
    "$",
    "elem",
    "data",
    "text",
    "source",
    "indexOf",
    "Error",
    "reference",
    "display",
    "calculated",
    "state",
    "row",
    "$row",
    "results1",
    "col",
    "label",
    "resolveLinks",
    "Material",
    "errors",
    "length",
    "ref1",
    "results2",
    "e",
    "message",
    "replace",
    "join",
    "old",
    "now",
    "input",
    "color",
    "toFixed",
    "title",
    "perform",
    "plugin",
    "done",
    "methods",
    "eval",
    "shift",
    "output",
    "_",
    "extend",
    "timeout",
    "delay",
    "setTimeout",
    "recalculate",
    "getPlugin",
    "getJSON",
    "slug",
    "filter",
    "story",
    "type",
    "radar",
    "candidates",
    "index",
    "hasClass",
    "get",
    "radarData",
    "reindex",
    "results",
    "sorted",
    "sortBy",
    "Rank",
    "empty",
    "$table",
    "rows",
    "remaining",
    "asSlug",
    "push"
  ],
  "sourceRoot": "",
  "sources": [
    "rollup.coffee"
  ],
  "sourcesContent": [
    "###\n * Federated Wiki : Rollup Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-rollup/blob/master/LICENSE.txt\n###\n\nwindow.plugins.rollup =\n  emit: (div, item) ->\n  bind: (div, item) ->\n\n    div.on 'dblclick', () -> wiki.textEditor div, item\n\n    div.append \"\"\"\n      <style>\n        td.material {overflow:hidden;}\n        td.score {text-align:right; width:25px}\n      </style>\n    \"\"\"\n\n    asValue = (obj) ->\n      return NaN unless obj?\n      switch obj.constructor\n        when Number then obj\n        when String then +obj\n        when Array then asValue(obj[0])\n        when Object then asValue(obj.value)\n        when Function then obj()\n        else NaN\n\n    attach = (search) ->\n      wiki.log 'attach', wiki.getDataNodes div\n      for elem in wiki.getDataNodes div\n        wiki.log 'attach loop', $(elem).data('item').text\n        if (source = $(elem).data('item')).text.indexOf(search) >= 0\n          return source\n      throw new Error \"can't find dataset with caption #{search}\"\n\n    reference = attach \"Materials Summary\"\n\n    display = (calculated, state) ->\n      row = state.row\n      $row = state.$row\n      for col in reference.columns\n        if col == 'Material'\n          label = wiki.resolveLinks \"[[#{row.Material}]]\"\n          if calculated\n            if state.errors.length > 0\n              errors = (e.message.replace(/\"/g,\"'\") for e in state.errors).join \"\\n\"\n              $row.append \"\"\"<td class=\"material\">#{label} <span style=\"color:red;\" title=\"#{errors}\">âœ˜</span></td>\"\"\"\n            else\n              $row.append \"\"\"<td class=\"material\">#{label}</td>\"\"\"\n          else\n            $row.append \"\"\"<td class=\"material\">#{label}</td>\"\"\"\n        else\n          old = asValue row[col]\n          now = asValue state.input[col]\n          if calculated && now?\n            color = if old.toFixed(4) == now.toFixed(4)\n              'green'\n            else if old.toFixed(0) == now.toFixed(0)\n              'orange'\n            else\n              'red'\n            title = \"#{row.Material}\\n#{col}\\nold #{old.toFixed 4}\\nnow #{now.toFixed 4}\"\n            $row.append \"\"\"<td class=\"score\" title=\"#{title}\" data-thumb=\"#{col}\" style=\"color:#{color};\">#{old.toFixed 0}</td>\"\"\"\n          else\n            title = \"#{row.Material}\\n#{col}\\n#{old.toFixed 4}\"\n            $row.append \"\"\"<td class=\"score\" title=\"#{title}\" data-thumb=\"#{col}\">#{old.toFixed 0}</td>\"\"\"\n\n    perform = (state, plugin, done) ->\n      if state.methods.length > 0\n        plugin.eval state, state.methods.shift(), state.input, (state, output) ->\n           state.output = output\n           _.extend state.input, output\n           perform state, plugin, done\n      else\n        return done state\n\n    timeout = (delay, done) ->\n      setTimeout done, delay\n\n    recalculate = (delay, state, done) ->\n      timeout delay, ->\n        wiki.getPlugin 'method', (plugin) ->\n          $.getJSON \"/#{state.slug}.json\", (data) ->\n            state.methods = _.filter data.story, (item) -> item.type == 'method'\n            perform state, plugin, done\n\n    radar = (input={}) ->\n      candidates = $(\".item:lt(#{$('.item').index(div)})\")\n      output = _.extend {}, input\n      for elem in candidates\n        elem = $(elem)\n        if elem.hasClass 'radar-source'\n          _.extend output, elem.get(0).radarData()\n        else if elem.hasClass 'data'\n          _.extend output, elem.data('item').data[0]\n      return output\n\n    reindex = (results) ->\n      wiki.log 'reindex', results\n      sorted = _.sortBy results, (state) -> -asValue(state.input['Total Score'])\n      for state, index in sorted\n        state.input.Rank = \"#{index+1}\"\n      for state in results\n        state.$row.empty()\n        display true, state\n\n    div.append ($table = $ \"\"\"<table/>\"\"\")\n    rows = _.sortBy reference.data, (row) -> -asValue(row['Total Score'])\n    delay = 0\n    results = []\n    remaining = rows.length\n    for row in rows\n      slug = wiki.asSlug row.Material\n      $table.append ($row = $ \"\"\"<tr class=\"#{slug}\">\"\"\")\n      state = {$row, row, slug, input: radar(), errors: []}\n      display false, state\n      delay += 200\n      recalculate delay, state, (state)->\n        state.$row.empty()\n        state.input.Rank = state.row.Rank\n        display true, state\n        results.push state\n        remaining -= 1\n        reindex(results) unless remaining\n"
  ]
}