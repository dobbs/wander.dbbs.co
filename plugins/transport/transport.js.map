{
  "version": 3,
  "names": [
    "beam",
    "bind",
    "emit",
    "expand",
    "graphData",
    "graphStats",
    "options",
    "report",
    "text",
    "replace",
    "url",
    "$",
    "getJSON",
    "page",
    "resultPage",
    "wiki",
    "newPage",
    "showResult",
    "$item",
    "candidates",
    "each",
    "graphs",
    "i",
    "len",
    "concat",
    "index",
    "length",
    "hasClass",
    "push",
    "arc",
    "arcs",
    "node",
    "nodes",
    "ref",
    "object",
    "JSON",
    "stringify",
    "domain",
    "graph",
    "m",
    "post",
    "match",
    "item",
    "opt",
    "append",
    "get",
    "find",
    "html",
    "on",
    "textEditor",
    "e",
    "preventDefault",
    "stopPropagation",
    "originalEvent",
    "dataTransfer",
    "getData",
    "params",
    "$page",
    "req",
    "shiftKey",
    "parents",
    "type",
    "dataType",
    "contentType",
    "data",
    "ajax",
    "done",
    "window",
    "plugins",
    "transport",
    "module",
    "exports"
  ],
  "sources": [
    "transport.coffee"
  ],
  "sourcesContent": [
    "\nexpand = (text)->\n  text\n    .replace /&/g, '&amp;'\n    .replace /</g, '&lt;'\n    .replace />/g, '&gt;'\n    .replace /\\*(.+?)\\*/g, '<i>$1</i>'\n\nbeam = (url) ->\n  $.getJSON url, (page) ->\n    resultPage = wiki.newPage(page)\n    wiki.showResult resultPage\n\ngraphData = ($item) ->\n  graphs = []\n  candidates = $(\".item:lt(#{$('.item').index($item)})\")\n  for each in candidates\n    if $(each).hasClass 'graph-source'\n      graphs.push each.graphData()\n  graphs\n\ngraphStats = ($item) ->\n  graphs = nodes = arcs = 0\n  candidates = $(\".item:lt(#{$('.item').index($item)})\")\n  for each in candidates\n    if $(each).hasClass 'graph-source'\n      graphs += 1\n      for node, arc of each.graphData()\n        nodes += 1\n        arcs += arc.length\n  {graphs, nodes, arcs}\n\nreport = (object) ->\n  \"\"\"<pre style=\"text-align: left; background-color:#ddd; padding:8px;\"\">#{JSON.stringify object, null, '  '}</pre>\"\"\"\n\noptions = (text) ->\n  domain = m[1] if m = text.match /(https?:\\/\\/.*?\\/)/\n  post = m[1] if m = text.match /\\bPOST\\b\\s*(.*)/\n  graph = !!text.match /\\bGRAPH\\b/\n  {domain, post, graph}\n\nemit = ($item, item) ->\n  opt = options item.text\n  $item.append \"\"\"\n    <div style=\"background-color:#eee;padding:15px;text-align:center;\">\n      <div class=preview>\n      </div>\n      <p class=transport-action>\n        transporting through<br>\n        #{expand item.text}\n      </p>\n      <p class=caption>\n        unavailable\n      </b>\n    </div>\n  \"\"\"\n  if opt.domain\n    $.get opt.domain, ->\n      $item.find('.caption').text 'ready'\n  if opt.graph\n    $item.find('.preview').html report graphStats($item)\n    $item.find('.transport-action').append \"<p><button>Beam Up</button></p>\"\n\nbind = ($item, item) ->\n  opt = options item.text\n  $item.on 'dblclick', () -> wiki.textEditor $item, item\n\n  $item.find('button').on 'click', (e) ->\n     post e, graphData($item)\n\n  $item.on 'drop', (e) ->\n    e.preventDefault()\n    e.stopPropagation()\n    post e,\n      text: e.originalEvent.dataTransfer.getData(\"text\")\n      html: e.originalEvent.dataTransfer.getData(\"text/html\")\n      url:  e.originalEvent.dataTransfer.getData(\"URL\")\n\n  post = (e, params) ->\n    $item.find('.caption').text 'waiting'\n    $page = $item.parents('.page') unless e.shiftKey\n\n    req =\n      type: \"POST\",\n      url: opt.post\n      dataType: 'json',\n      contentType: \"application/json\",\n      data: JSON.stringify(params)\n\n    $.ajax(req).done (page) ->\n      $item.find('.caption').text 'ready'\n      resultPage = wiki.newPage(page)\n      wiki.showResult resultPage, {$page}\n\n\nwindow.plugins.transport = {emit, bind} if window?\nmodule.exports = {expand} if module?\n"
  ],
  "mappings": "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"
}