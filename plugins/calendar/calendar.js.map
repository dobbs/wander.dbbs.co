{
  "version": 3,
  "names": [
    "apply",
    "bind",
    "dateAsValue",
    "emit",
    "format",
    "months",
    "parse",
    "precisionFor",
    "radarSource",
    "show",
    "span",
    "spans",
    "unitsFor",
    "result",
    "m",
    "indexOf",
    "text",
    "i",
    "j",
    "k",
    "len",
    "len1",
    "line",
    "ref",
    "rows",
    "word",
    "words",
    "split",
    "length",
    "match",
    "year",
    "slice",
    "month",
    "day",
    "label",
    "join",
    "push",
    "input",
    "output",
    "date",
    "radarValue",
    "ref1",
    "row",
    "Date",
    "getYear",
    "getMonth",
    "units",
    "value",
    "precision",
    "getFullYear",
    "concat",
    "getDate",
    "results1",
    "DAY",
    "MONTH",
    "YEAR",
    "DECADE",
    "EARLY",
    "LATE",
    "precisionInMilliseconds",
    "Math",
    "floor",
    "getTime",
    "$item",
    "results",
    "data",
    "addClass",
    "get",
    "radarData",
    "module",
    "exports",
    "div",
    "item",
    "append",
    "on",
    "wiki",
    "textEditor",
    "window",
    "plugins",
    "calendar"
  ],
  "sources": [
    "calendar.coffee"
  ],
  "sourcesContent": [
    "###\n * Federated Wiki : Calendar Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-calendar/blob/master/LICENSE.txt\n###\n\nmonths = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\nspans = ['EARLY', 'LATE', 'DECADE', 'DAY', 'MONTH', 'YEAR']\n\nspan = (result, span) ->\n\tif (m = spans.indexOf result.span) < 0\n\t\tresult.span = span\n\telse if (spans.indexOf span) < m\n\t\tresult.span = span\n\nparse = (text) ->\n\trows = []\n\tfor line in text.split /\\n/\n\t\tresult = {}\n\t\twords = line.match /\\S+/g\n\t\tfor word, i in words\n\t\t\tif word.match /^\\d\\d\\d\\d$/\n\t\t\t\tresult.year = +word\n\t\t\t\tspan result, 'YEAR'\n\t\t\telse if m = word.match /^(\\d0)S$/\n\t\t\t\tresult.year = +m[1]+1900\n\t\t\t\tspan result, 'DECADE'\n\t\t\telse if (m = spans.indexOf word) >= 0\n\t\t\t\tresult.span = spans[m]\n\t\t\telse if (m = months.indexOf word[0..2]) >= 0\n\t\t\t\tresult.month = m+1\n\t\t\t\tspan result, 'MONTH'\n\t\t\telse if m = word.match /^([1-3]?[0-9])$/\n\t\t\t\tresult.day = +m[1]\n\t\t\t\tspan result, 'DAY'\n\t\t\telse\n\t\t\t\tresult.label = words[i..999].join ' '\n\t\t\t\tbreak\n\t\trows.push result\n\trows\n\napply = (input, output, date, rows) ->\n\tresult = []\n\tfor row in rows\n\t\tif input[row.label]?.date?\n\t\t\tdate = input[row.label].date\n\t\tif output[row.label]?.date?\n\t\t\tdate = output[row.label].date\n\t\tif row.year?\n\t\t\tdate = new Date row.year, 1-1\n\t\tif row.month?\n\t\t\tdate = new Date date.getYear()+1900, row.month-1\n\t\tif row.day?\n\t\t\tdate = new Date date.getYear()+1900, date.getMonth(), row.day\n\t\tif row.label?\n\t\t\toutput[row.label] = {date}\n\t\t\toutput[row.label].span = row.span if row.span?\n\t\trow.date = date\n\t\tradarValue = dateAsValue(row.date, row.span)\n\t\trow.units = radarValue.units\n\t\trow.value = radarValue.value\n\t\trow.precision = radarValue.precision\n\t\tresult.push row\n\tresult\n\nshow = (date, span) ->\n\tswitch span\n\t\twhen 'YEAR' then date.getFullYear()\n\t\twhen 'DECADE' then \"#{date.getFullYear()}'S\"\n\t\twhen 'EARLY' then \"Early #{date.getFullYear()}'S\"\n\t\twhen 'LATE' then \"Late #{date.getFullYear()}'S\"\n\t\twhen 'MONTH' then \"#{months[date.getMonth()]} #{date.getFullYear()}\"\n\t\telse \"#{date.getDate()} #{months[date.getMonth()]} #{date.getFullYear()}\"\n\n\nformat = (rows) ->\n\tfor row in rows\n\t\t\"\"\"<tr><td>#{show row.date, row.span}<td>#{row.label}\"\"\"\n\nprecisionFor =\n\tDAY:\t\t1000 * 60 * 60 * 24\n\tMONTH:\t1000 * 60 * 60 * 24 * 365.25 / 12\n\tYEAR:\t\t1000 * 60 * 60 * 24 * 365.25\n\tDECADE:\t1000 * 60 * 60 * 24 * 365.25 * 10\n\tEARLY:\t1000 * 60 * 60 * 24 * 365.25 * 10\n\tLATE:\t\t1000 * 60 * 60 * 24 * 365.25 * 10\n\nunitsFor =\n\tDAY:\t\t'day'\n\tMONTH:\t'month'\n\tYEAR:\t\t'year'\n\tDECADE:\t'decade'\n\tEARLY:\t'decade'\n\tLATE:\t\t'decade'\n\ndateAsValue = (date, span) ->\n\tprecisionInMilliseconds = precisionFor[span] ? precisionFor.DAY\n\tunits : [unitsFor[span] ? unitsFor.DAY]\n\tvalue : (Math.floor(date.getTime() / precisionInMilliseconds))\n\tprecision : precisionInMilliseconds\n\nradarSource = ($item, results) ->\n\tdata = {}\n\tfor row in results\n\t\tdata[row.label] =\n\t\t\tunits: row.units\n\t\t\tvalue: row.value\n\t\t\tprecision: row.precision\n\n\t$item.addClass 'radar-source'\n\t$item.get(0).radarData = -> data\n\nmodule.exports = {parse, apply, format, radarSource} if module?\n\n\nemit = (div, item) ->\n\trows = parse item.text\n\t# wiki.log 'calendar rows', rows\n\tresults = apply {}, {}, new Date(), rows\n\t# wiki.log 'calendar results', results\n\tradarSource div, results\n\tdiv.append \"\"\"\n\t\t<table style=\"width:100%; background:#eee; padding:.8em; margin-bottom:5px;\">#{format(results).join ''}</table>\n\t\"\"\"\n\nbind = (div, item) ->\n\tdiv.on 'dblclick', () -> wiki.textEditor div, item\n\nwindow.plugins.calendar = {emit, bind} if window?\n"
  ],
  "mappings": "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"
}